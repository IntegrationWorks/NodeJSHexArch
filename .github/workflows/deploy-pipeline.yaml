name: deploy-pipeline
run-name: ${{ github.repository }} deploy pipeline
on:
  workflow_dispatch:
    inputs:
      image-tag:
        type: string
        description: Image Tag

env:
  IMAGE_HOST: ghcr.io
  IMAGE_PATH: ${{ github.repository }}
  IMAGE_TAG: ${{ github.event.inputs.image-tag }}
  APP_NAME: ${{ github.event.repository.name }}

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
      - name: Checkout action
        uses: actions/checkout@v2

      - name: Get commit short-sha
        id: commit-data
        uses: redhat-actions/common/commit-data@v1

      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4

      - name: OpenShift login
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ vars.IW_OPENSHIFT_SERVER_NON_PROD }}
          openshift_token: ${{ secrets.IW_OPENSHIFT_TOKEN_NON_PROD }}
          insecure_skip_tls_verify: true
          namespace: ${{ vars.IW_OPENSHIFT_NAMESPACE_DEV }}
          
      - id: lower-case-vars
        run: |
          image_path=${{ env.IMAGE_PATH }}
          app=${{ env.APP_NAME }}
          echo "image_path_lower=${image_path,,}" >> $GITHUB_OUTPUT
          echo "app_name_lower=${app,,}" >> $GITHUB_OUTPUT

      - name: Docker login
        run: |
          echo "${{ secrets.IW_GITHUB_CONTAINER_TOKEN }}" | docker login ghcr.io -u "${{ vars.IW_GITHUB_CONTAINER_USER }}" --password-stdin

      - run: | 
          oc new-app --name ${{ steps.lower-case-vars.outputs.app_name_lower }} ${{ env.IMAGE_HOST }}/${{ steps.lower-case-vars.outputs.image_path_lower }}:${{ env.IMAGE_TAG }} -n ${{ vars.IW_OPENSHIFT_NAMESPACE_DEV }} --env-file=./env/dev.env
