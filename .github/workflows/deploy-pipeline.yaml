name: deploy-pipeline
run-name: ${{ github.repository }} deploy pipeline
on:
  workflow_dispatch:

env:
  IMAGE_PATH: ghcr.io/${{ github.repository }}:latest
  APP_NAME: ${{ github.repository }}
  APP_PORT: 8080
  # IMAGE_STREAM: ${{ secrets.OPENSHIFT_NAMESPACE }}/petclinic-${{ github.run_id }}

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout action
        uses: actions/checkout@v2

       # Use the commit short-sha as the suffix of the app_name
      - name: Get commit short-sha
        id: commit-data
        uses: redhat-actions/common/commit-data@v1

      # Log into the OpenShift cluster using the secrets configured in the repository settings.
      # The GitHub Ubuntu runners have oc pre-installed.
      # If you're not using those runners, be sure to check out https://github.com/redhat-actions/openshift-tools-installer.
      - name: OpenShift login
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ vars.IW_OPENSHIFT_SERVER_NON_PROD }}
          openshift_token: ${{ secrets.IW_OPENSHIFT_TOKEN_NON_PROD }}
          # openshift_username:
          # openshift_password:
          insecure_skip_tls_verify: true
          namespace: ${{ vars.IW_OPENSHIFT_NAMESPACE_DEV }}
          
      # - name: Create Image stream from the image
      #   if: ${{ matrix.image-source == 'IMAGE_STREAM' }}
      #   run: |
      #     oc create is ${{ env.APP_NAME }}-${{ github.run_id }}
      #     oc import-image ${{ env.APP_NAME }}-${{ github.run_id }} --from ${{ env.IMAGE_PATH }}

      # This step will create a deployment, service, and route to run your app and expose it to the internet.
      - name: Create and expose app
        id: oc-new-app
        uses: redhat-actions/oc-new-app@v1 
        env:
          # IMAGE: ${{ env[matrix.image-source] }}
          IMAGE: ${{ env.IMAGE_PATH }}
        with:
          app_name: ${{ env.APP_NAME }}-${{ steps.commit-data.outputs.short_sha }}
          image: ${{ env.IMAGE }}
          namespace: ${{ vars.IW_OPENSHIFT_NAMESPACE_DEV }}
          # build_env: |
          #   MY_ENV=MY_VALUE
          # port: ${{ env.APP_PORT }}
          # create_pull_secret_from: podman
          # registry: quay.io
          # registry_username: ${{ env.REGISTRY_USERNAME }}
          # registry_password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.oc-new-app.outputs) }}"
  # deploy-staging:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: echo "deploy stage" 
  # - uses: trstringer/manual-approval@v1
  #   with:
  #     secret: ${{ github.TOKEN }}
  #     approvers: user1,user2,org-team1
  #     minimum-approvals: 1
  #     issue-title: "Deploying v1.3.5 to prod from staging"
  #     issue-body: "Please approve or deny the deployment of version v1.3.5."
  #     exclude-workflow-initiator-as-approver: false
  # deploy-production:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: echo "deploy production"   
